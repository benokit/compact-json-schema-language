[
    {
        "description": "compact json schema language definition",
        "lang=": "compact-json-schema-language",
        "id": "compact-json-schema",
        "data#1":
            {
                "lang=": "compact-json-schema-language", 
                "!id": "string",
                "!data": "@#compact-json-schema-data",
                "locals[]": "@#compact-json-schema"
            },
        "locals": [
            {
                "id": "compact-json-schema-data",
                "data#": [
                    "null",
                    "string",
                    "number",
                    "boolean",
                    "object",
                    "any",
                    "{@#compact-json-schema-data}",
                    "[@#compact-json-schema-data]"
                ]
            }
        ],
        "semantics": {
            "appending property modifiers": {
                "#": {
                    "value is": "anyOf",
                    "examples": [
                        {
                            "compact": {
                                "data#": [
                                    "string",
                                    "object"
                                ]
                            },
                            "standard": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "anyOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "objects"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    ]
                },
                "#1": {
                    "value is": "oneOf"
                },
                "#&": {
                    "value is": "allOf"
                },
                "=": {
                    "value is": "const",
                    "examples": [
                        {
                            "compact": {
                                "data=": "lore ipsum"
                            },
                            "standard": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "const": "lore ipsum"
                                    }
                                }
                            }
                        }
                    ]
                },
                "=1": {
                    "value is": "enum",
                    "examples": [
                        {
                            "compact": {
                                "data=1": [
                                    "one",
                                    "two"
                                ]
                            },
                            "standard": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "enum": [
                                            "one",
                                            "two"
                                        ]
                                    }
                                }
                            }
                        }
                    ]
                },
                "{}": {
                    "value is": "dictionary",
                    "examples": [
                        {
                            "compact": {
                                "data{}": "string"
                            },
                            "standard": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    ]
                },
                "()": {
                    "value is": "n-tuple",
                    "examples": [
                        {
                            "compact": {
                                "data()": [
                                    "string",
                                    "number",
                                    "number"
                                ]
                            },
                            "standard": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "number"
                                            },
                                            {
                                                "type": "number"
                                            }
                                        ],
                                        "additionalItems": false
                                    }
                                }
                            }
                        }
                    ]
                },
                "[]": {
                    "value is": "array",
                    "examples": [
                        {
                            "compact": {
                                "data[]": "string"
                            },
                            "standard": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    ]
                },
                "$$": {
                    "value is": "constrained by standard schema",
                    "examples": [
                        {
                            "compact": {
                                "data$$": {
                                    "type": "string"
                                }
                            },
                            "standard": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    ]
                }
            },
            "prepending property modifiers": {
                "!": {
                    "value is": "required",
                    "examples": [
                        {
                            "compact": {
                                "!data": "string"
                            },
                            "standard": {
                                "type": "object",
                                "required": [
                                    "data"
                                ],
                                "properties": {
                                    "data": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    ]
                }
            },
            "appending type modifiers": {
                ":regex": {
                    "type is": "string satisfying the regex expression",
                    "examples": [
                        {
                            "compact": {
                                "data": "string:^[A-Z]{3}$"
                            },
                            "standard": {
                                "type": "object",
                                "properties": {
                                    "data": "string",
                                    "pattern": "^[A-Z]{3}$"
                                }
                            }
                        }
                    ] 
                }
            },
            "prepending type modifiers": {
                "@": {
                    "type is": "referenced",
                    "examples": [
                        {
                            "compact": {
                                "data": "@custom-type"
                            },
                            "standard": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "custom-type"
                                    }
                                }
                            }
                        }
                    ]
                },
                "@#": {
                    "type is": "referenced from a locals",
                    "examples": [
                        {
                            "compact": {
                                "data": "@#custom-local-type"
                            },
                            "standard": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "#/$defs/custom-local-type"
                                    }
                                }
                            }
                        }
                    ]
                }
            },
            "enclosing type modifiers": {
                "{}": {
                    "type is": "dictionary",
                    "examples": [
                        {
                            "compact": {
                                "data": "{string}"
                            },
                            "equivalent": {
                                "data{}": "string"
                            }
                        }
                    ]
                },
                "[]": {
                    "type is": "array",
                    "examples": [
                        {
                            "compact": {
                                "data": "[string]"
                            },
                            "equivalent": {
                                "data[]": "string"
                            }
                        }
                    ]
                },
                "()": {
                    "type is": "n-tuple",
                    "examples": [
                        {
                            "compact": {
                                "data": "(string,number,@custom)"
                            },
                            "equivalent": {
                                "data()": [
                                    "string",
                                    "number",
                                    "@custom"
                                ]
                            }
                        }
                    ]
                }
            }
        }
    },
    {
        "example": {
            "id": "person",
            "data": {
                "name": "string",
                "address": {
                    "street": "string",
                    "city": "string",
                    "country": "string"
                },
                "nicks[]": "string",
                "emails[]": "@#email"
            },
            "locals": [
                {
                    "id": "email",
                    "data": {
                        "purpose=1": [
                            "home",
                            "office"
                        ],
                        "!email": "string"
                    }
                }
            ]
        }
    }
]